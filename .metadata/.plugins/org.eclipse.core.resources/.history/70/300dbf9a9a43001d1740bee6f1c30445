package fa.training.entities;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class ShapeManagement {
	static Scanner sc = new Scanner((System.in));
	static List<Rectangle> list = new ArrayList<>();

	public static void InputInt(String mess) {
		while (true) {
			try {
				System.out.println(mess);
				int a = Integer.parseInt(sc.nextLine().trim());
				if (a > 0) {
					return;
				} else {
					System.out.println("Number must be greater than 0");
					System.out.println("Enter again: ");
				}
			} catch (Exception e) {
				System.out.println("Number must be Integer");
				System.out.println("Enter again: ");
			}
		}
	}

	public static void displayRectangle() {
		if (list.isEmpty()) {
			System.out.println("Don't have any data to display.");
		}
		for (int i = 0; i < list.size(); i++) {
			if (i == list.size() - 1) {
				System.out.println(list.get(i).toString());
			}
		}
	}

	public static void getMaxArea() {
		if (list.isEmpty()) {
			System.out.println("Don't have any data to display.");
		} else {
			int maxArea = list.get(0).calculateArea();
			int flag = 0;
			for (int i = 0; i < list.size(); i++) {
				if (maxArea < list.get(i).calculateArea()) {
					flag = i;
				}
			}
			System.out.println(list.get(flag).toString());
		}
	}
	public static void getMinPerimeter() {
		if (list.isEmpty()) {
			System.out.println("Don't have any data to display.");
		} else {
			int maxArea = list.get(0).calculateArea();
			int flag = 0;
			for (int i = 0; i < list.size(); i++) {
				if (maxArea < list.get(i).calculateArea()) {
					flag = i;
				}
			}
			System.out.println(list.get(flag).toString());
		}
	}

}
